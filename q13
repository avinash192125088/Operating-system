#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define SIZE 10

/* First Fit Memory Allocation */
void first_fit(int block_size[], int m, int process_size[], int n)
{
    int allocation[n], i, j;
    memset(allocation, -1, sizeof(allocation));

    for (i = 0; i < n; i++) {
        for (j = 0; j < m; j++) {
            if (block_size[j] >= process_size[i]) {
                allocation[i] = j;
                block_size[j] -= process_size[i];
                break;
            }
        }
    }

    printf("Process No.\tProcess Size\tBlock no.\n");
    for (i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t", i + 1, process_size[i]);
        if (allocation[i] != -1)
            printf("%d\n", allocation[i] + 1);
        else
            printf("Not Allocated\n");
    }
}

/* Best Fit Memory Allocation */
void best_fit(int block_size[], int m, int process_size[], int n)
{
    int allocation[n], i, j;
    memset(allocation, -1, sizeof(allocation));

    for (i = 0; i < n; i++) {
        int best_index = -1;
        for (j = 0; j < m; j++) {
            if (block_size[j] >= process_size[i]) {
                if (best_index == -1)
                    best_index = j;
                else if (block_size[best_index] > block_size[j])
                    best_index = j;
            }
        }
        if (best_index != -1) {
            allocation[i] = best_index;
            block_size[best_index] -= process_size[i];
        }
    }

    printf("Process No.\tProcess Size\tBlock no.\n");
    for (i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t", i + 1, process_size[i]);
        if (allocation[i] != -1)
            printf("%d\n", allocation[i] + 1);
        else
            printf("Not Allocated\n");
    }
}

/* Worst Fit Memory Allocation */
void worst_fit(int block_size[], int m, int process_size[], int n)
{
    int allocation[n], i, j;
    memset(allocation, -1, sizeof(allocation));

    for (i = 0; i < n; i++) {
        int worst_index = -1;
        for (j = 0; j < m; j++) {
            if (block_size[j] >= process_size[i]) {
                if (worst_index == -
